#!/usr/bin/env python3
"""
ü§ñ –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤ –≤ Telegram –¥–ª—è magazine_scan_270725_bot

üìã –ù–ê–ó–ù–ê–ß–ï–ù–ò–ï:
   –°–æ–∑–¥–∞–µ—Ç —Ç–æ–ø–∏–∫–∏ –¥–ª—è 15 –Ω–æ–≤—ã—Ö RSS –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –≤ —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–µ -1002804553475
   –ù–∞–∑–≤–∞–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤: —Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤ –±–µ–∑ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π
   
üîß –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:
   python3 create_magazine_topics.py

‚ö†Ô∏è –¢–†–ï–ë–û–í–ê–ù–ò–Ø:
   - –ë–æ—Ç @magazine_scan_270725_bot –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º –≤ —á–∞—Ç–µ
   - –ß–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø–æ–π —Å –≤–∫–ª—é—á–µ–Ω–Ω—ã–º–∏ —Ç–æ–ø–∏–∫–∞–º–∏
   - –ù—É–∂–Ω—ã –ø—Ä–∞–≤–∞: manage_topics, pin_messages

üìÖ –°–æ–∑–¥–∞–Ω: 27 –∏—é–ª—è 2025 –¥–ª—è RSS Media Bus v3.1
"""

import requests
import time
import json

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –Ω–æ–≤–æ–≥–æ –±–æ—Ç–∞
BOT_TOKEN = "8308777401:AAGRKAXL1eOAU756BrkZgcn5ChuguGjps3g"
CHAT_ID = -1002804553475
BASE_URL = f"https://api.telegram.org/bot{BOT_TOKEN}"

# –¢–æ–ø–∏–∫–∏ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è (—Ç–æ–ª—å–∫–æ –Ω–∞–∑–≤–∞–Ω–∏—è –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤, –±–µ–∑ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏–π)
topics = [
    {
        "name": "Futurism",
        "source_id": "futurism.com",
        "url": "https://futurism.com/feed",
        "icon_color": 0x6FB9F0
    },
    {
        "name": "The Decoder", 
        "source_id": "the-decoder.com",
        "url": "https://the-decoder.com/feed/",
        "icon_color": 0x00C851
    },
    {
        "name": "Mpost",
        "source_id": "mpost.io", 
        "url": "https://mpost.io/rss",
        "icon_color": 0x007BFF
    },
    {
        "name": "Design Milk",
        "source_id": "design-milk.com",
        "url": "https://design-milk.com/feed/",
        "icon_color": 0xFF6B6B
    },
    {
        "name": "Hypebeast",
        "source_id": "hypebeast.com",
        "url": "http://feeds.feedburner.com/hypebeast/feed",
        "icon_color": 0x000000
    },
    {
        "name": "Dezeen",
        "source_id": "dezeen.com",
        "url": "https://www.dezeen.com/feed/",
        "icon_color": 0x6C757D
    },
    {
        "name": "Artnet News",
        "source_id": "artnet.com",
        "url": "https://news.artnet.com/feed",
        "icon_color": 0xDC3545
    },
    {
        "name": "It's Nice That",
        "source_id": "itsnicethat.com",
        "url": "http://feeds2.feedburner.com/itsnicethat/SlXC",
        "icon_color": 0xFFC107
    },
    {
        "name": "Creative Bloq",
        "source_id": "creativebloq.com",
        "url": "https://www.creativebloq.com/feed",
        "icon_color": 0x28A745
    },
    {
        "name": "Wired",
        "source_id": "wired.com",
        "url": "https://www.wired.com/feed",
        "icon_color": 0x17A2B8
    },
    {
        "name": "Variety",
        "source_id": "variety.com",
        "url": "https://variety.com/v/digital/feed/",
        "icon_color": 0x6F42C1
    },
    {
        "name": "The Verge",
        "source_id": "theverge_full.com",
        "url": "https://www.theverge.com/rss/index.xml",
        "icon_color": 0xE83E8C
    },
    {
        "name": "The Register",
        "source_id": "theregister.com", 
        "url": "https://www.theregister.com/headlines.atom",
        "icon_color": 0x20C997
    },
    {
        "name": "TechCrunch",
        "source_id": "techcrunch_full.com",
        "url": "https://techcrunch.com/feed/",
        "icon_color": 0xFD7E14
    },
    {
        "name": "Fast Company",
        "source_id": "fastcompany.com",
        "url": "https://www.fastcompany.com/rss",
        "icon_color": 0x6610F2
    }
]

def create_topic(name, icon_color):
    """–°–æ–∑–¥–∞–µ—Ç —Ç–æ–ø–∏–∫ –≤ Telegram —á–∞—Ç–µ"""
    url = f"{BASE_URL}/createForumTopic"
    data = {
        "chat_id": CHAT_ID,
        "name": name,
        "icon_color": icon_color
    }
    
    response = requests.post(url, json=data)
    return response.json()

def send_message(message_thread_id, text):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫"""
    url = f"{BASE_URL}/sendMessage"
    data = {
        "chat_id": CHAT_ID,
        "message_thread_id": message_thread_id,
        "text": text,
        "parse_mode": "HTML",
        "disable_web_page_preview": True
    }
    
    response = requests.post(url, json=data)
    return response.json()

def pin_message(message_thread_id, message_id):
    """–ó–∞–∫—Ä–µ–ø–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —Ç–æ–ø–∏–∫–µ"""
    url = f"{BASE_URL}/pinChatMessage"
    data = {
        "chat_id": CHAT_ID,
        "message_id": message_id,
        "disable_notification": True
    }
    
    response = requests.post(url, json=data)
    return response.json()

def main():
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–æ–≤ –¥–ª—è magazine_scan_270725_bot...")
    print(f"üì± –ß–∞—Ç: {CHAT_ID}")
    print(f"ü§ñ –ë–æ—Ç: @magazine_scan_270725_bot")
    print(f"üìä –¢–æ–ø–∏–∫–æ–≤ –∫ —Å–æ–∑–¥–∞–Ω–∏—é: {len(topics)}")
    print()
    
    created_topics = []
    
    for i, topic in enumerate(topics, 1):
        print(f"üìù –°–æ–∑–¥–∞—é —Ç–æ–ø–∏–∫ {i}/{len(topics)}: {topic['name']}")
        
        # –°–æ–∑–¥–∞–µ–º —Ç–æ–ø–∏–∫
        result = create_topic(topic['name'], topic['icon_color'])
        
        if result.get('ok'):
            topic_id = result['result']['message_thread_id']
            print(f"‚úÖ –¢–æ–ø–∏–∫ —Å–æ–∑–¥–∞–Ω! ID: {topic_id}")
            
            # –ñ–¥–µ–º 2 —Å–µ–∫—É–Ω–¥—ã (—Ç–∞–π–º–∞—É—Ç)
            time.sleep(2)
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ–± RSS
            pin_message_text = f"""üì° RSS: {topic['name']}
üîó –ò—Å—Ç–æ—á–Ω–∏–∫: {topic['url']}
üÜî Source ID: {topic['source_id']}"""
            
            print(f"üìå –û—Ç–ø—Ä–∞–≤–ª—è—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± RSS...")
            msg_result = send_message(topic_id, pin_message_text)
            
            if msg_result.get('ok'):
                message_id = msg_result['result']['message_id']
                print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ! ID: {message_id}")
                
                # –ó–∞–∫—Ä–µ–ø–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ (—Å —Ç–∞–π–º–∞—É—Ç–æ–º)
                time.sleep(1)
                pin_result = pin_message(topic_id, message_id)
                
                if pin_result.get('ok'):
                    print(f"üìå –°–æ–æ–±—â–µ–Ω–∏–µ –∑–∞–∫—Ä–µ–ø–ª–µ–Ω–æ!")
                else:
                    print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä–µ–ø–∏—Ç—å: {pin_result}")
                
                created_topics.append({
                    'name': topic['name'],
                    'source_id': topic['source_id'],
                    'topic_id': topic_id,
                    'message_id': message_id,
                    'url': topic['url']
                })
            else:
                print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {msg_result}")
                # –í—Å–µ —Ä–∞–≤–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–æ–ø–∏–∫–∞
                created_topics.append({
                    'name': topic['name'],
                    'source_id': topic['source_id'],
                    'topic_id': topic_id,
                    'message_id': None,
                    'url': topic['url']
                })
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞: {result}")
            if result.get('error_code') == 429:
                retry_after = result.get('parameters', {}).get('retry_after', 30)
                print(f"‚è≥ Rate limit! –ñ–¥—É {retry_after} —Å–µ–∫—É–Ω–¥...")
                time.sleep(retry_after)
                # –ü–æ–≤—Ç–æ—Ä—è–µ–º –ø–æ–ø—ã—Ç–∫—É
                result = create_topic(topic['name'], topic['icon_color'])
                if result.get('ok'):
                    topic_id = result['result']['message_thread_id']
                    print(f"‚úÖ –¢–æ–ø–∏–∫ —Å–æ–∑–¥–∞–Ω –ø–æ—Å–ª–µ –æ–∂–∏–¥–∞–Ω–∏—è! ID: {topic_id}")
                    created_topics.append({
                        'name': topic['name'],
                        'source_id': topic['source_id'],
                        'topic_id': topic_id,
                        'message_id': None,
                        'url': topic['url']
                    })
        
        print()
        # –¢–∞–π–º–∞—É—Ç –º–µ–∂–¥—É —Å–æ–∑–¥–∞–Ω–∏–µ–º —Ç–æ–ø–∏–∫–æ–≤
        if i < len(topics):  # –ù–µ –∂–¥–µ–º –ø–æ—Å–ª–µ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ
            time.sleep(3)
    
    print("=" * 60)
    print("üéâ –†–ï–ó–£–õ–¨–¢–ê–¢–´ –°–û–ó–î–ê–ù–ò–Ø –¢–û–ü–ò–ö–û–í:")
    print("=" * 60)
    
    for topic in created_topics:
        print(f"üìù {topic['name']}")
        print(f"   üÜî Topic ID: {topic['topic_id']}")
        print(f"   üîó Source ID: {topic['source_id']}")
        if topic['message_id']:
            print(f"   üí¨ Message ID: {topic['message_id']}")
        print()
    
    print(f"‚úÖ –°–æ–∑–¥–∞–Ω–æ —Ç–æ–ø–∏–∫–æ–≤: {len(created_topics)}/{len(topics)}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ñ–∞–π–ª
    result_filename = 'magazine_topics_result.json'
    with open(result_filename, 'w', encoding='utf-8') as f:
        json.dump(created_topics, f, ensure_ascii=False, indent=2)
    
    print(f"üíæ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã –≤ {result_filename}")
    
    # –°–æ–∑–¥–∞–µ–º –º–∞–ø–ø–∏–Ω–≥ –¥–ª—è users.yaml
    print()
    print("=" * 60)
    print("üìã –ú–ê–ü–ü–ò–ù–ì –î–õ–Ø config/users.yaml:")
    print("=" * 60)
    print("magazine_scan_270725_bot:")
    print("  topics_mapping:")
    for topic in created_topics:
        print(f"    {topic['source_id']}: {topic['topic_id']}")
    print()

if __name__ == "__main__":
    main() 