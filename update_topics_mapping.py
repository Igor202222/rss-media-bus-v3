#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è topics_mapping –≤ users.yaml
–Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–æ–ø–∏–∫–æ–≤ –∏–∑ topics_mapping_result.json
"""

import json
import yaml
from pathlib import Path

def update_users_config():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç topics_mapping –≤ config/users.yaml"""
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–æ–≤
    topics_file = Path("topics_mapping_result.json")
    if not topics_file.exists():
        print("‚ùå –§–∞–π–ª topics_mapping_result.json –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return False
    
    with open(topics_file, 'r', encoding='utf-8') as f:
        topics_mapping = json.load(f)
    
    if not topics_mapping:
        print("‚ùå topics_mapping –ø—É—Å—Ç–æ–π")
        return False
    
    print(f"üìã –ó–∞–≥—Ä—É–∂–µ–Ω–æ {len(topics_mapping)} —Ç–æ–ø–∏–∫–æ–≤")
    
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    users_file = Path("config/users.yaml")
    
    with open(users_file, 'r', encoding='utf-8') as f:
        users_config = yaml.safe_load(f)
    
    # –û–±–Ω–æ–≤–ª—è–µ–º topics_mapping –¥–ª—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    updated_count = 0
    
    for user_id, user_data in users_config.items():
        telegram_configs = user_data.get('telegram_configs', {})
        
        for config_id, telegram_config in telegram_configs.items():
            # –û–±–Ω–æ–≤–ª—è–µ–º topics_mapping
            telegram_config['topics_mapping'] = topics_mapping.copy()
            updated_count += 1
            
            print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω mapping –¥–ª—è {user_id}::{config_id}")
            print(f"   üìä –¢–æ–ø–∏–∫–æ–≤: {len(topics_mapping)}")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é
    with open(users_file, 'w', encoding='utf-8') as f:
        yaml.dump(users_config, f, default_flow_style=False, indent=2, allow_unicode=True)
    
    print(f"\nüíæ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞")
    print(f"‚úÖ –û–±–Ω–æ–≤–ª–µ–Ω–æ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–π: {updated_count}")
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–∏–º–µ—Ä –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–≥–æ mapping
    print(f"\nüéØ –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ç–æ–ø–∏–∫–æ–≤:")
    for i, (source, topic_id) in enumerate(list(topics_mapping.items())[:10]):
        print(f"  {source}: {topic_id}")
    if len(topics_mapping) > 10:
        print(f"  ... –∏ –µ—â–µ {len(topics_mapping) - 10}")
    
    return True

if __name__ == "__main__":
    print("üîß –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ topics_mapping –≤ users.yaml")
    print("=" * 50)
    
    success = update_users_config()
    
    if success:
        print("\nüéâ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!")
        print("üîÑ –ú–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å RSS Bus —Å–∏—Å—Ç–µ–º—É")
    else:
        print("\n‚ùå –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–µ —É–¥–∞–ª–æ—Å—å") 