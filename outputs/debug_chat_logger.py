#!/usr/bin/env python3
"""
RSS Media Bus - Debug Chat Logger v3.0
–û—Ç–ø—Ä–∞–≤–∫–∞ –ª–æ–≥–æ–≤ –≤ Telegram —á–∞—Ç —Å —Ç–æ–ø–∏–∫–∞–º–∏
"""

import asyncio
import logging
from datetime import datetime
from enum import Enum
from typing import Optional
from telegram import Bot
from telegram.constants import ParseMode

class LogLevel(Enum):
    SYSTEM = "üîß –°–ò–°–¢–ï–ú–ê"
    USER = "üë§ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–ò" 
    RSS = "üì° RSS –ú–û–ù–ò–¢–û–†–ò–ù–ì"
    ERROR = "‚ùå –û–®–ò–ë–ö–ò"

class DebugChatLogger:
    def __init__(self):
        # Telegram Bot –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
        self.bot_token = "8171335651:AAFv3gO3dCZTLxu62JLtWsK6Gza7bdAoYVc"
        self.chat_id = "-1002756550488"  # –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–π ID —Å—É–ø–µ—Ä–≥—Ä—É–ø–ø—ã
        
        # –¢–æ–ø–∏–∫–∏ –¥–ª—è —Ä–∞–∑–Ω—ã—Ö —Ç–∏–ø–æ–≤ –ª–æ–≥–æ–≤
        self.topics = {
            LogLevel.SYSTEM: None,      # –û–±—â–∏–π —Ç–æ–ø–∏–∫
            LogLevel.USER: None,        # –°–æ–∑–¥–∞—Ç—å —Ç–æ–ø–∏–∫ "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏"
            LogLevel.RSS: 3,            # –¢–æ–ø–∏–∫ "RSS –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" (—Å–æ–∑–¥–∞–Ω)
            LogLevel.ERROR: None,       # –°–æ–∑–¥–∞—Ç—å —Ç–æ–ø–∏–∫ "–û—à–∏–±–∫–∏"
        }
        
        self.bot = Bot(token=self.bot_token)
        self.logger = logging.getLogger(__name__)
        
    async def log(self, level: LogLevel, message: str, details: Optional[str] = None):
        """–û—Ç–ø—Ä–∞–≤–∏—Ç—å –ª–æ–≥ –≤ Telegram —á–∞—Ç"""
        try:
            timestamp = datetime.now().strftime("%H:%M:%S")
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            full_message = f"{level.value} [{timestamp}]\n\n{message}"
            
            if details:
                full_message += f"\n\nüìù –î–µ—Ç–∞–ª–∏:\n{details}"
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–π —Ç–æ–ø–∏–∫
            topic_id = self.topics.get(level)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            kwargs = {
                "chat_id": self.chat_id,
                "text": full_message,
                "parse_mode": ParseMode.MARKDOWN_V2 if self._is_markdown_safe(full_message) else None
            }
            
            # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ø–∏–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –∑–∞–¥–∞–Ω
            if topic_id is not None:
                kwargs["message_thread_id"] = topic_id
                
            await self.bot.send_message(**kwargs)
            
        except Exception as e:
            self.logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞: {e}")
    
    def _is_markdown_safe(self, text: str) -> bool:
        """–ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ Markdown"""
        dangerous_chars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
        return not any(char in text for char in dangerous_chars)
    
    async def log_system(self, message: str, details: str = None):
        """–°–∏—Å—Ç–µ–º–Ω—ã–µ –ª–æ–≥–∏"""
        await self.log(LogLevel.SYSTEM, message, details)
    
    async def log_user(self, message: str, details: str = None):
        """–õ–æ–≥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π"""
        await self.log(LogLevel.USER, message, details)
    
    async def log_rss(self, message: str, details: str = None):
        """–õ–æ–≥–∏ RSS –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
        await self.log(LogLevel.RSS, message, details)
    
    async def log_error(self, message: str, details: str = None):
        """–õ–æ–≥–∏ –æ—à–∏–±–æ–∫"""
        await self.log(LogLevel.ERROR, message, details)
    
    async def create_topic(self, name: str, icon_emoji: str = "üì°") -> bool:
        """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ø–∏–∫–∞ –≤ —á–∞—Ç–µ"""
        try:
            # –°–æ–∑–¥–∞–µ–º —Ç–æ–ø–∏–∫ —á–µ—Ä–µ–∑ Bot API
            response = await self.bot.create_forum_topic(
                chat_id=self.chat_id,
                name=name,
                icon_custom_emoji_id=icon_emoji if icon_emoji else None
            )
            
            topic_id = response.message_thread_id
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–æ–ø–∏–∫ '{name}' —Å ID: {topic_id}")
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º ID —Ç–æ–ø–∏–∫–∞ –¥–ª—è RSS –ª–æ–≥–æ–≤
            if "RSS" in name or "–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥" in name.lower():
                self.topics[LogLevel.RSS] = topic_id
                print(f"üì° –¢–æ–ø–∏–∫ RSS —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {topic_id}")
            
            return True
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–æ–ø–∏–∫–∞ '{name}': {e}")
            return False

# –ì–ª–æ–±–∞–ª—å–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä –ª–æ–≥–≥–µ—Ä–∞
debug_logger = DebugChatLogger()

# –ë—ã—Å—Ç—Ä—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
async def log_system(message: str, details: str = None):
    await debug_logger.log_system(message, details)

async def log_user(message: str, details: str = None):
    await debug_logger.log_user(message, details)
    
async def log_rss(message: str, details: str = None):
    await debug_logger.log_rss(message, details)

async def log_error(message: str, details: str = None):
    await debug_logger.log_error(message, details)

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
async def test_logger():
    """–¢–µ—Å—Ç –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–æ–≤"""
    await log_system("Debug –ª–æ–≥–≥–µ—Ä –∑–∞–ø—É—â–µ–Ω", "–í–µ—Ä—Å–∏—è: v3.0")
    await log_rss("–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ RSS –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞", "–ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ —Ç–æ–ø–∏–∫ RSS")
    
if __name__ == "__main__":
    asyncio.run(test_logger()) 