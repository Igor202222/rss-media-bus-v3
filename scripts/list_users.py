#!/usr/bin/env python3

"""
list_users.py - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π RSS Media Bus v3.0
"""

import yaml
import sys
from datetime import datetime

def load_users():
    """–ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ config/users.yaml"""
    try:
        with open('config/users.yaml', 'r', encoding='utf-8') as f:
            users = yaml.safe_load(f)
        return users if users else {}
    except FileNotFoundError:
        print("‚ùå –§–∞–π–ª config/users.yaml –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return {}
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è config/users.yaml: {e}")
        return {}

def format_datetime(dt_str):
    """–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è"""
    if not dt_str:
        return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
    try:
        dt = datetime.fromisoformat(dt_str.replace('Z', '+00:00'))
        return dt.strftime('%d.%m.%Y %H:%M')
    except:
        return dt_str

def main():
    print("üë• RSS Media Bus v3.0 - –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π")
    print("=" * 50)
    
    users = load_users()
    
    if not users:
        print("üòî –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        print("\nüí° –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
        print("   ./scripts/add_user.sh \"user_id\" \"–ò–º—è\" \"chat_id\" \"bot_token\"")
        return
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total = len(users)
    active = sum(1 for u in users.values() if u and u.get('active'))
    telegram_enabled = sum(1 for u in users.values() 
                          if u and u.get('active') and 
                          u.get('telegram', {}).get('enabled'))
    
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {total}")
    print(f"   –ê–∫—Ç–∏–≤–Ω—ã—Ö: {active}")
    print(f"   –° –≤–∫–ª—é—á–µ–Ω–Ω—ã–º Telegram: {telegram_enabled}")
    print()
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    print("üìã –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:")
    print("-" * 50)
    
    for user_id, user_data in users.items():
        if not user_data:
            continue
            
        # –ë–∞–∑–æ–≤–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        name = user_data.get('name', '–ë–µ–∑ –∏–º–µ–Ω–∏')
        active_status = "‚úÖ" if user_data.get('active') else "‚ùå"
        created_at = format_datetime(user_data.get('created_at'))
        
        # Telegram –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        telegram = user_data.get('telegram', {})
        telegram_enabled = telegram.get('enabled', False)
        chat_id = telegram.get('chat_id', '–Ω–µ —É–∫–∞–∑–∞–Ω')
        telegram_status = "‚úÖ" if telegram_enabled else "‚ùå"
        
        # –ò—Å—Ç–æ—á–Ω–∏–∫–∏
        sources = user_data.get('sources', [])
        sources_count = len(sources)
        
        # –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã
        processors = user_data.get('processors', [])
        processors_list = [p.get('name', 'unnamed') for p in processors]
        
        print(f"üë§ {user_id}")
        print(f"   üìù –ò–º—è: {name}")
        print(f"   üîÑ –ê–∫—Ç–∏–≤–µ–Ω: {active_status}")
        print(f"   üì± Telegram: {telegram_status} ({chat_id})")
        print(f"   üì° –ò—Å—Ç–æ—á–Ω–∏–∫–æ–≤: {sources_count}")
        if sources_count <= 10:
            print(f"   üìã –ò—Å—Ç–æ—á–Ω–∏–∫–∏: {', '.join(sources[:5])}{'...' if sources_count > 5 else ''}")
        print(f"   üîß –ü—Ä–æ—Ü–µ—Å—Å–æ—Ä—ã: {', '.join(processors_list)}")
        print(f"   üìÖ –°–æ–∑–¥–∞–Ω: {created_at}")
        print(f"   üìÑ –ú–µ—Ç–æ–¥: {user_data.get('registration_method', 'unknown')}")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        if user_data.get('description'):
            print(f"   üí¨ –û–ø–∏—Å–∞–Ω–∏–µ: {user_data['description']}")
        
        print()
    
    # –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏
    print("üí° –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏:")
    print(f"   –î–æ–±–∞–≤–∏—Ç—å: ./scripts/add_user.sh \"new_user\" \"–ò–º—è\" \"chat_id\" \"bot_token\"")
    print(f"   –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥: ./scripts/monitor_system.sh")
    print(f"   –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ User Service: kill $(ps aux | grep user_notification | awk '{{print $2}}')")

if __name__ == "__main__":
    main() 